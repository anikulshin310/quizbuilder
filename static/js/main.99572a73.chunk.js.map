{"version":3,"sources":["Components/InputForm.js","Components/AnswerList.js","Components/QuestionList.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionForm","addFromInput","placeholder","useState","value","setValue","handleSubmit","e","preventDefault","onSubmit","ListItem","TextField","fullWidth","variant","type","onChange","target","AnswerList","question","answers","setAnswers","correctAnswers","setCorrectAnswers","useEffect","console","log","quiz","text","handleChange","checked","indexOf","newCorrectAnswers","splice","style","marginLeft","map","answer","index","divider","FormControlLabel","control","Checkbox","color","ListItemText","primary","ListItemSecondaryAction","IconButton","onClick","newAnswers","removeAnswers","toString","InputForm","QuestionList","questions","setQuestions","Container","maxWidth","Typography","align","component","List","dense","Divider","borderRadius","newQuestions","removeQuestions","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA+CeA,EAzCM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAAkB,EAC1BC,mBAAS,IADiB,mBAC7CC,EAD6C,KACtCC,EADsC,KAG9CC,EAAe,SAAAC,GACjBA,EAAEC,iBACFJ,GAASH,EAAaG,GACtBC,EAAS,KAOb,OACI,sBAAMI,SAAUH,EAAhB,SAEI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAQ,WACRC,KAAK,OACLV,MAAOA,EACPF,YAAaA,EACba,SAdK,SAAAR,GACjBF,EAASE,EAAES,OAAOZ,QAcNK,SAAUH,S,iGCmDfW,EAvEI,SAACC,GAAc,IAAD,EACCf,mBAAS,IADV,mBACtBgB,EADsB,KACbC,EADa,OAEejB,mBAAS,IAFxB,mBAEtBkB,EAFsB,KAENC,EAFM,KAK7BC,qBAAU,WAENC,QAAQC,IAAIC,MAIhB,IAAMA,EAAO,CAAC,CACVR,SAAUA,EAASA,SAASS,KAC5BR,QAASA,EACTE,eAAgBA,IAKpB,SAASO,EAAarB,GAElB,GAAKA,EAAES,OAAOa,QAJQF,EAWDpB,EAAES,OAAOZ,MAXCkB,EAAkB,GAAD,mBAAKD,GAAL,CAAqBM,SAI9C,CACnBN,EAAeS,QAAQvB,EAAES,OAAOZ,OAChC,IAAM2B,EAAiB,YAAOV,GAC9BU,EAAkBC,OAAOX,EAAeS,QAAQvB,EAAES,OAAOZ,OAAQ,GACjEkB,EAAkBS,GARD,IAACJ,EA6B1B,OACI,sBAAKM,MAAO,CAAEC,WAAY,IAA1B,UACKf,EAAQgB,KAAI,SAACC,EAAQC,GAAT,OACT,eAAC3B,EAAA,EAAD,CAAU4B,SAAO,EAAjB,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAU1B,SAAUa,EAAcc,MAAM,UAAUtC,MAAOgC,MAGtE,cAACO,EAAA,EAAD,CAAcC,QAASR,IACvB,cAACS,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAS,kBAtBnB,SAACV,EAAOD,GAC1B,IAAMY,EAAU,YAAO7B,GACvB6B,EAAWhB,OAAOK,EAAO,GACzBjB,EAAW4B,GACX,IAAMjB,EAAiB,YAAOV,GAC9BU,EAAkBC,OAAOX,EAAeS,QAAQM,GAAS,GACzDd,EAAkBS,GAgByBkB,CAAcZ,EAAOD,IAAhD,SACI,cAAC,IAAD,UARWC,EAAMa,eAcjC,cAACC,EAAD,CAAWjD,YAAY,aAAaD,aA/B1B,SAAC0B,GAAD,OAAUP,EAAW,GAAD,mBAAKD,GAAL,CAAcQ,EAAKuB,qBCa9CE,EAhDM,WAAO,IAAD,EAEWjD,mBAAS,IAFpB,mBAEhBkD,EAFgB,KAELC,EAFK,KAUvB,OACI,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,cAACC,EAAA,EAAD,CAAYC,MAAM,SAAS7C,QAAQ,KAAK8C,UAAU,KAAlD,0BAICN,EAAUlB,KAAI,SAACjB,EAAUmB,GAAX,OAEX,eAACuB,EAAA,EAAD,CAAMC,OAAK,EAAX,UAEI,cAACC,EAAA,EAAD,IACA,eAACpD,EAAA,EAAD,CAAUuB,MAAO,CAAE8B,aAAc,IAAjC,UACI,cAACpB,EAAA,EAAD,CAAcC,QAAS1B,EAASS,OAEhC,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAS,kBArBrB,SAAAV,GACpB,IAAM2B,EAAY,YAAOX,GACzBW,EAAahC,OAAOK,EAAO,GAC3BiB,EAAaU,GAkBkCC,CAAgB5B,IAA3C,SACI,cAAC,IAAD,WAQZ,cAAC,EAAD,CAAYnB,SAAUA,MAhBTmB,EAAMa,eAwB3B,cAACC,EAAD,CAAWjD,YAAY,eAAeD,aAvC1B,SAAC0B,GAAD,OAAU2B,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAE1B,kBCgBjDuC,MAbf,WAEE,OAEE,8BACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAOC,KAAK,IAAIR,UAAWP,SCPlBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAIJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99572a73.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { ListItem, TextField, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Add } from '@material-ui/icons';\r\n\r\nconst QuestionForm = ({ addFromInput, placeholder }) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        value && addFromInput(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <ListItem>\r\n                <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n\r\n                </TextField>\r\n               \r\n            </ListItem>\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default QuestionForm","import React, { useState, useEffect } from 'react';\r\nimport InputForm from './InputForm'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nconst AnswerList = (question) => {\r\n    const [answers, setAnswers] = useState([]);\r\n    const [correctAnswers, setCorrectAnswers] = useState([]);\r\n    /* const [quizes, setQuizes] = useState([]) */\r\n    \r\n    useEffect(() => {\r\n        \r\n        console.log(quiz)\r\n        \r\n    })\r\n\r\n    const quiz = [{\r\n        question: question.question.text,\r\n        answers: answers,\r\n        correctAnswers: correctAnswers,\r\n    }]\r\n\r\n    const addCorrectAnswer = (text) => setCorrectAnswers([...correctAnswers, text]);\r\n\r\n    function handleChange(e) {\r\n\r\n        if (!e.target.checked) {\r\n            correctAnswers.indexOf(e.target.value)\r\n            const newCorrectAnswers = [...correctAnswers];\r\n            newCorrectAnswers.splice(correctAnswers.indexOf(e.target.value), 1);\r\n            setCorrectAnswers(newCorrectAnswers);\r\n        }\r\n        else {\r\n            addCorrectAnswer(e.target.value)\r\n        }\r\n    }\r\n\r\n    const addAnswer = (text) => setAnswers([...answers, text.toString()]);\r\n\r\n    const removeAnswers = (index, answer) => {\r\n        const newAnswers = [...answers];\r\n        newAnswers.splice(index, 1);\r\n        setAnswers(newAnswers);\r\n        const newCorrectAnswers = [...correctAnswers];\r\n        newCorrectAnswers.splice(correctAnswers.indexOf(answer), 1);\r\n        setCorrectAnswers(newCorrectAnswers)\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ marginLeft: 50 }}>\r\n            {answers.map((answer, index) => (\r\n                <ListItem divider key={index.toString()}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox onChange={handleChange} color=\"primary\" value={answer} />}\r\n                    >\r\n                    </FormControlLabel>\r\n                    <ListItemText primary={answer}></ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => removeAnswers(index, answer)}>\r\n                            <DeleteIcon></DeleteIcon>\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            ))}\r\n\r\n            <InputForm placeholder=\"Set answer\" addFromInput={addAnswer} />\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n};\r\n\r\nexport default AnswerList;","\r\nimport React, { useState } from 'react';\r\nimport InputForm from \"./InputForm\";\r\nimport { Typography, Container, Divider, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AnswerList from './AnswerList'\r\n\r\nconst QuestionList = () => {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const addQuestion = (text) => setQuestions([...questions, { text }]);\r\n    const removeQuestions = index => {\r\n        const newQuestions = [...questions];\r\n        newQuestions.splice(index, 1);\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Typography align=\"center\" variant=\"h2\" component=\"h2\">\r\n                Quiz Builder\r\n            </Typography>\r\n\r\n            {questions.map((question, index) => (\r\n\r\n                <List dense key={index.toString()} >\r\n\r\n                    <Divider></Divider>\r\n                    <ListItem style={{ borderRadius: 10 }}>\r\n                        <ListItemText primary={question.text}>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton onClick={() => removeQuestions(index)}>\r\n                                <DeleteIcon></DeleteIcon>\r\n                            </IconButton>\r\n\r\n\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n\r\n\r\n                    <AnswerList question={question} ></AnswerList>\r\n\r\n\r\n\r\n\r\n                </List>\r\n\r\n            ))}\r\n            <InputForm placeholder=\"Set question\" addFromInput={addQuestion} />\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default QuestionList;","import React from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport QuestionList from './Components/QuestionList';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Switch>\r\n      <Route path='/' component={QuestionList} />\r\n      </Switch>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}