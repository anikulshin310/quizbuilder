{"version":3,"sources":["Components/InputForm.js","Components/AnswerList.js","Components/QuestionList.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionForm","addFromInput","placeholder","useState","value","setValue","handleSubmit","e","preventDefault","onSubmit","ListItem","TextField","fullWidth","variant","type","onChange","target","AnswerList","question","answers","setAnswers","correctAnswers","setCorrectAnswers","qa","text","handleChange","checked","indexOf","newCorrectAnswers","splice","style","marginLeft","map","answer","index","console","log","divider","FormControlLabel","control","Checkbox","color","label","ListItemSecondaryAction","IconButton","onClick","newAnswers","removeAnswers","toString","InputForm","QuestionList","questions","setQuestions","List","Divider","borderRadius","ListItemText","primary","newQuestions","removeQuestions","App","Container","maxWidth","Typography","align","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b85e56f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { ListItem, TextField, ListItemSecondaryAction, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Add } from '@material-ui/icons';\r\n\r\nconst QuestionForm = ({ addFromInput, placeholder }) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        value && addFromInput(value);\r\n        setValue(\"\");\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <ListItem>\r\n                <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n\r\n                </TextField>\r\n                {/* <ListItemSecondaryAction>\r\n                    <IconButton onClick={handleSubmit}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </ListItemSecondaryAction> */}\r\n            </ListItem>\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default QuestionForm","import React, { useState } from 'react';\r\nimport InputForm from './InputForm'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { ListItem, ListItemSecondaryAction } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\n\r\n\r\n\r\n\r\nconst AnswerList = (question) => {\r\n    const [answers, setAnswers] = useState([]);\r\n    const [correctAnswers, setCorrectAnswers] = useState([]);\r\n    const addCorrectAnswer = (text) => setCorrectAnswers([...correctAnswers, text]);\r\n    const qa = {\r\n        question:question.question.text,\r\n        answers:answers,\r\n        correctAnswers:correctAnswers\r\n    }\r\n\r\n\r\n    function handleChange(e) {\r\n\r\n        if (!e.target.checked) {\r\n            correctAnswers.indexOf(e.target.value)\r\n            const newCorrectAnswers = [...correctAnswers];\r\n            newCorrectAnswers.splice(correctAnswers.indexOf(e.target.value), 1);\r\n            setCorrectAnswers(newCorrectAnswers);\r\n            \r\n\r\n        }\r\n        else {\r\n\r\n            addCorrectAnswer(e.target.value)\r\n        }\r\n\r\n    }\r\n\r\n    const addAnswer = (text) => setAnswers([...answers, text.toString()]);\r\n\r\n    const removeAnswers = index => {\r\n        const newAnswers = [...answers];\r\n        newAnswers.splice(index, 1);\r\n        setAnswers(newAnswers);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ marginLeft: 50 }}>\r\n\r\n            {answers.map((answer, index) => (\r\n                <ListItem onChange={console.log(qa)} divider key={index.toString()}>\r\n\r\n                    <FormControlLabel\r\n\r\n                        control={<Checkbox onChange={handleChange} color=\"primary\" value={answer} />}\r\n\r\n\r\n                        label={answer}\r\n                    >\r\n\r\n                    </FormControlLabel>\r\n\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => removeAnswers(index)}>\r\n                            <DeleteIcon></DeleteIcon>\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n\r\n\r\n                </ListItem>\r\n            ))}\r\n\r\n            <InputForm placeholder=\"Set answer\" addFromInput={addAnswer} />\r\n\r\n\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default AnswerList;","\r\nimport React, { useState } from 'react';\r\nimport InputForm from \"./InputForm\";\r\nimport { Divider, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AnswerList from './AnswerList'\r\n\r\nconst QuestionList = () => {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const addQuestion = (text) => setQuestions([...questions, { text }]);\r\n    const removeQuestions = index => {\r\n        const newQuestions = [...questions];\r\n        newQuestions.splice(index, 1);\r\n        setQuestions(newQuestions);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n\r\n            {questions.map((question, index) => (\r\n\r\n                <List key={index.toString()} >\r\n\r\n                    <Divider></Divider>\r\n                    <ListItem style={{  borderRadius: 10 }}>\r\n                        <ListItemText primary={question.text}>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton onClick={() => removeQuestions(index)}>\r\n                                <DeleteIcon></DeleteIcon>\r\n                            </IconButton>\r\n\r\n\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n\r\n\r\n                    <AnswerList question={question} ></AnswerList>\r\n\r\n\r\n\r\n\r\n                </List>\r\n\r\n            ))}\r\n            <InputForm placeholder=\"Set question\" addFromInput={addQuestion} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionList;","import React from 'react';\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport './App.css';\nimport QuestionList from './Components/QuestionList';\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Typography align=\"center\" variant=\"h2\" component=\"h2\">\n          Quiz Builder\n</Typography>\n        <QuestionList></QuestionList>\n\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}